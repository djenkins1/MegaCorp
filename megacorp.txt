Megacorp space game

Oversee company operations

Unit testing

Choose company logos(font awesome)?

RESTful using Mongo/Express/Node stack


Future Ideas:
    Contracts for specific dates
    Buyout other companies
    Military aspects
    Multiplayer?


TEST DRIVEN DEVELOPMENT....

Modules:
    Configuration(DONE)
    Data API
        DataConnection(DONE)
        Clean/Build each table(DONE)
        CompanyDAO(DONE)
        PlanetDAO(DONE)
        SystemDAO(DONE)
        ShipDAO(DONE)
        BuildingDAO(DONE)
        ShipBluePrintDAO(DONE)
        BuildingBluePrintDAO(DONE)
        WeaponBluePrintDAO(DONE)
    Business Objects for each table
    Indexes for each table
    Loading Data from JSON for server setup
    Restful endpoints for each DAO

==============================
DATA:
==============================
Configuration(FILE/Constants?)
    Key,Value

ServerInfo
    Key,Value
    +++Things like Galactic Star Date...



Company(DONE)
    ID,Name,Logo,Money,Employees,PlanetID(Headquarters)

Planet(DONE)
    ID,Name,Taxes,Money,Atmosphere,Composition,SystemID,Population,Location(OBJ)

System(DONE)
    ID,Name,Location(OBJ)

ShipBluePrint(DONE)
    ID,Name,MaxInventory,MaxDamage,Speed,Range,Size,Employees,LaborCost,WeaponTypeName,WeaponBluePrint(OBJ),FuelCost: [],ResourceCost(CONSTRUCT): []

BuildingBluePrint(DONE)
    ID,Name,MaxInventory,MaxDamage,Speed,Size,LaborCost,ProductionCost: [],Employees,WeaponTypeName,WeaponBluePrint(OBJ),Produces: [],ResourceCost(CONSTRUCT): []

WeaponBluePrint(DONE)
    ID,Name,DamageLow,DamageHigh,HitRatio,Speed,AmmoCost: []

Ship(DONE)
    ID,Name,CompanyID,Damage,ShipTypeName,ShipBluePrint(OBJ),Location(OBJ),Inventory: []
    
Building(DONE)
    ID,Name,BuildingTypeName,BuildingBluePrint(OBJ),PlanetID,CompanyID,Inventory: []


Offer(Needs JSON sample data)
    ID,BuildingID,CompanyID,PlanetID,Price,StarDateCreated(OBJ),OfferType(Buy/Sell),IsFilled,Goods: []



Transfer(Needs Data Access Object/JSON sample data)
    ID,BuildingFromID,BuildingToID,CompanyID,PlanetID,IsFilled,Goods: []

RevolvingOffer(Needs Data Access Object/JSON sample data)
    ID,Offer(OBJ),Frequency(OBJ),Until(OBJ)

RevolvingTransfer(Needs Data Access Object/JSON sample data)
    ID,Transfer(OBJ),Frequency(OBJ),Until(OBJ)


NOTES:
    Need to update tables having locations so that x,y,z are all numeric and not strings

    Resources that start with @ in their name do not take up inventory space




