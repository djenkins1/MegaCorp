Megacorp space game

Oversee company operations

Unit testing

Choose company logos(font awesome)?

RESTful using Mongo/Express/Node stack


Future Ideas:
    Contracts for specific dates
    Buyout other companies
    Military aspects
        combat system between ships,use weapon prints
    Multiplayer?
    Buildings that sell to consumers(produce money?)

Modules:
    Configuration(DONE)
    Data API(DONE)
    Loading Data from JSON for server setup(DONE)
    Business Objects for each table
    Indexes for each table
    Restful endpoints for each DAO

==============================
DATA:
==============================


Company(DONE)
    ID,Name,Logo,Money,Employees,PlanetID(Headquarters)
    BO:
        ChangeName,Changes the name of the company(NO UPDATE DB YET)
        ChangeLogo,Changes the logo of the company(NO UPDATE DB YET)
        AddMoney,Adds money to the company(NO UPDATE DB YET)
        RemoveMoney,Removes money from the company(NO UPDATE DB YET)
        AddEmployees,Adds employees to the company(NO UPDATE DB YET)
        RemoveEmployees,Removes employees from the company(NO UPDATE DB YET)
        ChangeHq,Changes the headquarters of the company(NO UPDATE DB YET)
        GetAllBuildings,Returns all buildings owned by the company
        GetAllShips,Returns all ships owned by the company
        GetAllOffers,Returns all offers from the company
        GetAllTransfers,Returns all transfers from the company
        SaveCompany,Saves any changes made to the company to the database
        AllCompanies,Returns all companies in the database
        CreateCompany,Creates a new company and adds it to the database
        DefaultObj,Returns the default prototype for a new object

Ship(Needs Implemented BusinessObject)
    ID,Name,CompanyID,Damage,ShipTypeName,ShipBluePrint(OBJ),Location(OBJ),Destination(OBJ),Inventory: []
    BO:
        SumGoods,returns the sum total of all the goods in the ship inventory(Not including @ goods)
        ChangeDestination,Change the destination of the ship(NO UPDATE DB YET)
        MoveShip,Move the ship to the location given(NO UPDATE DB YET)
        DestinationFuelCost,returns the amount of fuel needed to travel to the location given(from shipObj passed)
        UseFuel,Remove the fuel needed to travel 1 square(NO UPDATE DB YET)
        RemoveGoods,Remove goods from the ships inventory(NO UPDATE DB YET)
        AddGoods,Adds goods to the ships inventory(NO UPDATE DB YET)
        ChangeName,Change the name of the ship(NO UPDATE DB YET)
        ChangeCompany,Change the company that owns the ship(NO UPDATE DB YET)
        AddDamage,Add damage to the ship(NO UPDATE DB YET)
        FixDamage,Remove damage from the ship(NO UPDATE DB YET)
        IsDocked,Returns true if the ship is docked on a planet(If location Has Z coordinate)
        IsFull,Returns true if the ship's inventory is completely maxed out
        IsMaxDamaged,returns true if the ship has the maximum possible damage
        HasFuel,Returns true if the ship has the fuel needed to travel 1 square
        LocationFuelCost,returns the amount of fuel needed to travel to the location given
        HasGoods,Returns true if the ship has the goods specified
        HasSpaceForGoods,returns true if the ship has enough inventory space for the goods specified or undefined otherwise
        SaveShip,Saves the changes made to the ship into the database
        AllShips,Returns all ships in the database
        CreateShip,Creates a new ship and adds it to the database
        DefaultObj,Returns the default prototype for a new object

Planet(Needs BusinessObject)
    ID,Name,Taxes,Money,Atmosphere,Composition,SystemID,Population,Location(OBJ)
    BO:
        (NOT NEEDED)GetAllCompanies,Returns all companies with buildings/ships/headquarters(?) on planet
        ChangeName,changes the name of the planet(NO UPDATE DB YET)
        ChangeTaxes,changes the tax rate of the planet(NO UPDATE DB YET)
        AddMoney,Adds money to the planet(NO UPDATE DB YET)
        RemoveMoney,Removes money from the planet(NO UPDATE DB YET)
        AddPopulation,Adds population to the planet(NO UPDATE DB YET)
        RemovePopulation,Removes population from the planet(NO UPDATE DB YET)
        GetDockedShips,Returns all ships that are docked on planet(Have Z in location that matches planet's Z)
        GetAllBuildings,Returns all buildings that are on the planet
        GetCompaniesByHQ,Returns all companies that have headquarters on planet
        SavePlanet,Saves any changes to the planet to the database
        AllPlanets,Returns all planets in the database
        CreatePlanet,Creates a new planet and adds it to the database
        DefaultObj,Returns the default prototype for a new object

System(Needs BusinessObject)
    ID,Name,Location(OBJ)
    BO:
        GetPlanets,Returns all planets that are part of the system
        GetShipsTraveling,Returns all ships that are In System but not docked
        GetAllShips,Returns all ships that are In System traveling or docked
        AllSystems,Returns all systems in the database
        CreateSystem,Creates a new system and adds it to the database
        DefaultObj,Returns the default prototype for a new object

Building(Needs BusinessObject)
    ID,Name,BuildingTypeName,BuildingBluePrint(OBJ),PlanetID,CompanyID,Inventory: []
    BO:
        SumGoods,returns the sum total of all the goods in the building inventory(Not including @ goods)
        ChangeName,change name(NO UPDATE DB YET)
        ChangeCompany,change company that owns(NO UPDATE DB YET)
        AddGoods,add goods to inventory(NO UPDATE DB YET)
        RemoveGoods,remove goods from inventory(NO UPDATE DB YET)
        ProduceGoods,add the goods that are produced to inventory(NO UPDATE DB YET)
        AddDamage,add on damage(NO UPDATE DB YET)
        FixDamage,remove damage(NO UPDATE DB YET)
        UseNeeded,remove goods needed for producing(NO UPDATE DB YET)
        IsFull,return true if inventory is filled to max space or false otherwise
        HasNeeded,returns true if the building has the goods needed to produce goods
        HasGoods,returns true if the building has the goods speciifed
        SaveBuilding,save the changes made to the building object to the database
        AllBuildings,return all buildings in the database
        CreateBuilding,insert a new building into database
        DefaultObj,Returns the default prototype for a new object


ServerInfo(Needs Business Object)
    Key,Value
    +++Things like Galactic Star Date...
    BO:
        UpdateInfoValue,updates the value for the key(NO UPDATE DB YET)
        SaveInfo,Saves the changes made to the info object to the database
        AllInfo,return all info in the database
        CreateInfo,insert a new info object into the database
        DefaultObj,Returns the default prototype for a new object

Offer(Needs Business Object)
    ID,BuildingID,CompanyID,PlanetID,Price,StarDateCreated,OfferType(Buy/Sell),IsFilled,Priority,Goods: []
    BO:
        UpdatePrice,updates the price of the offer(NO UPDATE DB YET)
        SetFilled,sets that the offer is filled(NO UPDATE DB YET)
        UpdatePriority,updates the priority of the offer(NO UPDATE DB YET)
        SaveOffer,updates the offer in the database
        AllOffers,returns all offers in the database
        CreateOffer,creates a new offer and inserts into the database
        DefaultObj,Returns the default prototype for a new object

Transfer(Needs Business Object)
    ID,BuildingFromID,BuildingToID,CompanyID,PlanetID,IsFilled,StarDateCreated,Priority,Goods: []
    BO:
        SetFilled,sets that the transfer is filled(NO UPDATE DB YET)
        UpdatePriority,updates the priority of the transfer(NO UPDATE DB YET)
        SaveTransfer,updates the transfer in the database
        AllTransfers,returns all transfers in the database
        CreateTransfer,creates a new transfer and inserts into the database
        DefaultObj,Returns the default prototype for a new object

ShipBluePrint(Needs BusinessObject)
    ID,Name,MaxInventory,MaxDamage,Speed,Range,Size,Employees,LaborCost,WeaponTypeName,WeaponBluePrint(OBJ),FuelCost: [],ResourceCost(CONSTRUCT): []
    BO:
        (NOT NEEDED)GetShips,returns all ships having the type
        AllBluePrints,returns all ship blue prints in the database
        DefaultObj,Returns the default prototype for a new object

BuildingBluePrint(Needs BusinessObject)
    ID,Name,MaxInventory,MaxDamage,Speed,Size,LaborCost,ProductionCost: [],Employees,WeaponTypeName,WeaponBluePrint(OBJ),Produces: [],ResourceCost(CONSTRUCT): []
    BO:
        (NOT NEEDED)GetBuildings,returns all buildings having the type
        AllBluePrints,returns all building blueprints in the database
        DefaultObj,Returns the default prototype for a new object

WeaponBluePrint(Needs BusinessObject)
    ID,Name,DamageLow,DamageHigh,HitRatio,Speed,AmmoCost: []
    BO:
        (NOT NEEDED)GetShipPrints,returns all ship prints with weapon type
        (NOT NEEDED)GetBuildingPrints,returns all building prints with weapon type
        AllBluePrints,returns all weapon blueprints in the database
        DefaultObj,Returns the default prototype for a new object

Price(Needs Business Object)
    Prices table for goods which is updated every turn based on fulfilled offers
    ID,good,planetId,low,high,lastUpdate
    BO:
        UpdateLow,updates the low price of a particular good(NO UPDATE DB YET)
        UpdateHigh,updates the high price of a particular good(NO UPDATE DB YET)
        SetLastUpdate,sets the star date that the good's price was updated last(NO UPDATE DB YET)
        SavePrice,updates the price to the database
        AllPrices,returns all prices in the database
        GetPriceOfGood,returns the price object of the good specified for the planet specified
        CreatePrice,creates a new price and inserts into the database
        DefaultObj,Returns the default prototype for a new object





RevolveOffer(Needs JSON sample data populated/Business Object)
    ID,Offer(OBJ),Frequency(OBJ),Until(OBJ),InEffect(true,false)
    BO:
        (NOT NEEDED)AllOffers,returns all offers that are in revolve offers table under Offer column
        UpdateFrequency,updates the frequency of the revolve offer(NO UPDATE DB YET)
        UpdateUntil,updates the until field of the revolve offer(NO UPDATE DB YET)
        SetInEffect,updates the InEffect field of the revolve offer(NO UPDATE DB YET)
        SaveRevolveOffer,updates the revolve offer to the database
        AllRevolveOffers,returns all revolve offers in the database
        CreateRevolveOffer,creates a new revolve offer and inserts into the database
        DefaultObj,Returns the default prototype for a new object

RevolveTransfer(Needs JSON sample data populated/Business Object)
    ID,Transfer(OBJ),Frequency(OBJ),Until(OBJ),InEffect(true,false)
    BO:
        (NOT NEEDED)AllTransfers,returns all transfers that are in revolve transfers table under Transfer column
        UpdateFrequency,updates the frequency of the revolve transfer(NO UPDATE DB YET)
        UpdateUntil,updates the until field of the revolve transfer(NO UPDATE DB YET)
        SetInEffect,updates the InEffect field of the revolve transfer(NO UPDATE DB YET)
        SaveRevolveTransfer,updates the revolve transfer to the database
        AllRevolveTransfers,returns all revolve transfers in the database
        CreateRevolveTransfer,creates a new revolve transfer and inserts into the database
        DefaultObj,Returns the default prototype for a new object



MoneyTransact(Needs DAO/JSON sample data populated/Business Object)
    ID,FromCompany,ToCompany,Amount,StarDate,Reason
    BO:
        CreateMoneyTransact
        AllMoneyTransact
        DefaultObj,Returns the default prototype for a new object

GoodTransact(Needs DAO/JSON sample data populated/Business Object)
    ID,FromId,ToId,FromType,ToType,StarDate,Reason




NOTES:
    Maybe limit types of buildings based on planet atmosphere/composition?

    Need to verify that goods are > 0 for ShipBO.checkValidGoods

    Need to convert everything to integer when adding/removing(goods/money...)

    (DONE)Need to redo locationFuelCost and destinationFuelCost in ShipBO
        (DONE)should be based on shipBluePrint.fuelCost and not configuration value
        (DONE)also need to redo tests

    Resources that start with @ in their name do not take up inventory space

    Construction table for ships/buildings????

    How to construct buildings/ships from specific buildings?
        @Building/@Ship for produced good?

Resource Ideas:
    Ore -> (
        Steel
        Copper
        Gold
        Silver
        Aluminum
        Titanium
    )
    Clay ->
        Bricks
    Stone ->
        Concrete
    Crystal ->
        Glass
    Crops -> (
        Oil(vegetable)
        Rations
        Wine
        Meat
    )
    Fruit
    Lumber
    Spice
    Cotton ->
        Cloth
    Rubber ->
        Plastic
    @Power
    Low-Grade Fuel
    Mid-Grade Fuel
    High-Grade Fuel
    Chemicals
    Circuitry
    Technology
    Battery
    Machinery
    Wood Furniture
    Furniture




https://mongodb.github.io/node-mongodb-native/markdown-docs/queries.html

{
  "_id": idvalue,
  "author":{
    "firstname":"Daniel",
    "lastname": "Defoe"
  },
  "books":[
    {
      "title":"Robinson Crusoe"
      "year": 1714
    }
  ]
}
collection.find({"author.firstname":"Daniel})
